version: '3.9'

services:
  # ------------------ PostgreSQL cho Auth ------------------
  postgres-auth:
    image: postgres:15
    container_name: postgres-auth
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth_db
    ports:
      - "5433:5432"
    volumes:
      - auth_pgdata:/var/lib/postgresql/data

  # ------------------ Auth Service ------------------
  auth-service:
    build: ./auth-service
    container_name: auth-service
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres-auth
    env_file:
      - ./auth-service/.env
    volumes:
      - ./auth-service:/usr/src/app
    working_dir: /usr/src/app
    command: npm run start:dev

  # ---------- PostgreSQL cho User ----------
  postgres-user:
    image: postgres:15
    container_name: postgres-user
    restart: always
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - pgdata-user:/var/lib/postgresql/data

  # ---------- User Service ----------
  user-service:
    build: ./user-service
    container_name: user-service
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      - postgres-user
    env_file:
      - ./user-service/.env
    volumes:
      - ./user-service:/app
    working_dir: /app
    command: npm run start:dev

  # ===================== API Gateway =====================
  gateway:
    build: ./gateway
    container_name: api-gateway
    restart: always
    depends_on:
      - auth-service
      - user-service
    env_file:
      - ./gateway/.env           # PORT, AUTH_SERVICE_URL, USER_SERVICE_URL
    ports:
      - "8080:8080"
    volumes:
      - ./gateway:/app
    working_dir: /app
    command: npm run start:dev

volumes:
  auth_pgdata:
  pgdata-user:
